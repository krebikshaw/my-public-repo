{"version":3,"sources":["redux/slice.js","webAPI.js","useRep.js","components/RepItem.js","App.js","app/store.js","index.js"],"names":["userSlice","createSlice","name","initialState","reps","rep","isLoading","reducers","setReps","state","action","push","payload","setRep","setIsLoading","actions","getRepos","dispatch","fetch","method","headers","Accept","then","res","json","result","selectReps","user","selectIsLoading","useRep","useDispatch","useSelector","window","addEventListener","document","documentElement","scrollTop","innerHeight","body","clientHeight","handleGetRepos","UsersTable","styled","table","UsersContainer","div","UsersThead","thead","UsersTbody","tbody","UserTr","tr","UserTh","th","UserTd","td","UserItem","description","html_url","RepItems","className","map","id","AppContainer","App","useEffect","configureStore","reducer","userReducer","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"6LAGaA,EAAYC,YAAY,CACnCC,KAAM,OACNC,aAAc,CACZC,KAAM,GACNC,IAAK,GACLC,WAAW,GAEbC,SAAU,CACRC,QAAS,SAACC,EAAOC,GAAY,IAAD,GAC1B,EAAAD,EAAML,MAAKO,KAAX,oBAAmBD,EAAOE,WAE5BC,OAAQ,SAACJ,EAAOC,GACdD,EAAMJ,IAAMK,EAAOE,SAErBE,aAAc,SAACL,EAAOC,GACpBD,EAAMH,UAAYI,EAAOE,Y,EAKkBZ,EAAUe,QAA5CP,E,EAAAA,QAASK,E,EAAAA,OAAQC,E,EAAAA,aAEnBE,EAAW,kBAAM,SAACC,GAE7B,OADAA,EAASH,GAAa,ICvBfI,MAAM,GAAD,OAHG,iDAGa,CAC1BC,OAAQ,MACRC,QAAS,CAEP,eAAgB,mBAChBC,OAAQ,oCAETC,MAAK,SAACC,GAAD,OAASA,EAAIC,UDiBAF,MAAK,SAACG,GACzBR,EAASH,GAAa,IACtBG,EAAST,EAAQiB,IACjBR,EAASJ,EAAOY,EAAO,UAIdC,EAAa,SAACjB,GAAD,OAAWA,EAAMkB,KAAKvB,MACnCwB,EAAkB,SAACnB,GAAD,OAAWA,EAAMkB,KAAKrB,WACtCN,IAAf,QEhCe,SAAS6B,IACtB,IAAMZ,EAAWa,cACX1B,EAAO2B,YAAYL,GACnBpB,EAAYyB,YAAYH,GAc9B,OAVAI,OAAOC,iBAAiB,UAAU,WAE9BC,SAASC,gBAAgBC,UAAYJ,OAAOK,YAC1CH,SAASI,KAAKC,aAAe,MAC9BjC,GAEDW,EAASD,QAIN,CACLZ,OACAoC,eAdqB,kBAAMvB,EAASD,O,8gBCJxC,IAAMyB,EAAaC,IAAOC,MAAV,KAEVC,EAAiBF,IAAOG,IAAV,KAIdC,EAAaJ,IAAOK,MAAV,KAEVC,EAAaN,IAAOO,MAAV,KAEVC,EAASR,IAAOS,GAAV,KAENC,EAASV,IAAOW,GAAV,KAINC,EAASZ,IAAOa,GAAV,KAENC,EAAW,SAAC,GAAa,IAAXnD,EAAU,EAAVA,IACDyB,cAEjB,OACE,eAACoB,EAAD,WACE,cAACI,EAAD,UAASjD,EAAIH,OACb,cAACoD,EAAD,UAASjD,EAAIoD,cACb,cAACH,EAAD,UAASjD,EAAIqD,eAKJ,SAASC,IAAY,IAC1BvD,EAASyB,IAATzB,KAER,OACE,mCACE,cAACwC,EAAD,UACE,eAACH,EAAD,CAAYmB,UAAU,4CAAtB,UACE,cAACd,EAAD,CAAYc,UAAU,aAAtB,SACE,eAACV,EAAD,WACE,cAACE,EAAD,oBACA,cAACA,EAAD,0BACA,cAACA,EAAD,uBAGJ,cAACJ,EAAD,UACG5C,EAAKyD,KAAI,SAACxD,GAAD,OACR,cAAC,EAAD,CAAuBA,IAAKA,GAAbA,EAAIyD,gB,qEC9CjC,IAAMC,EAAerB,IAAOG,IAAV,KAmBHmB,MAjBf,WAAgB,IAAD,EACoBnC,IAAzBzB,EADK,EACLA,KAAMoC,EADD,EACCA,eAMd,OAJAyB,qBAAU,WACRzB,MACC,IAGD,eAACuB,EAAD,CAAcH,UAAU,YAAxB,UACE,oBAAIA,UAAU,iBAAd,sCACA,uBACA,oBAAIA,UAAU,mBAAd,6BACCxD,GAAQ,cAACuD,EAAD,QChBAO,cAAe,CAC5BC,QAAS,CACPxC,KAAMyC,KCCVC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJtC,SAASuC,eAAe,W","file":"static/js/main.ad45485c.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { getReposAPI } from '../webAPI';\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    reps: [],\n    rep: {},\n    isLoading: false,\n  },\n  reducers: {\n    setReps: (state, action) => {\n      state.reps.push(...action.payload);\n    },\n    setRep: (state, action) => {\n      state.rep = action.payload;\n    },\n    setIsLoading: (state, action) => {\n      state.isLoading = action.payload;\n    },\n  },\n});\n\nexport const { setReps, setRep, setIsLoading } = userSlice.actions;\n\nexport const getRepos = () => (dispatch) => {\n  dispatch(setIsLoading(true));\n  return getReposAPI().then((result) => {\n    dispatch(setIsLoading(false));\n    dispatch(setReps(result));\n    dispatch(setRep(result[0]));\n  });\n};\n\nexport const selectReps = (state) => state.user.reps;\nexport const selectIsLoading = (state) => state.user.isLoading;\nexport default userSlice.reducer;\n","const BASE_URL = 'https://api.github.com/users/krebikshaw/repos';\n\nconst getReposAPI = () => {\n  return fetch(`${BASE_URL}`, {\n    method: 'GET',\n    headers: {\n      // Authorization: 'token b158363e582e00aa4a76f8b6827ba0d3a9db0367',\n      'content-type': 'application/json',\n      Accept: 'application/vnd.github.v3+json',\n    },\n  }).then((res) => res.json());\n};\n\nexport { getReposAPI };\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport { getRepos, selectReps, selectIsLoading } from './redux/slice';\n\nexport default function useRep() {\n  const dispatch = useDispatch();\n  const reps = useSelector(selectReps);\n  const isLoading = useSelector(selectIsLoading);\n\n  const handleGetRepos = () => dispatch(getRepos());\n\n  window.addEventListener('scroll', () => {\n    if (\n      document.documentElement.scrollTop + window.innerHeight >\n        document.body.clientHeight - 200 &&\n      !isLoading\n    ) {\n      dispatch(getRepos());\n    }\n  });\n\n  return {\n    reps,\n    handleGetRepos,\n  };\n}\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport useRep from '../useRep';\nimport { useDispatch } from 'react-redux';\n\nconst UsersTable = styled.table``;\n\nconst UsersContainer = styled.div`\n  margin: 10px 0;\n`;\n\nconst UsersThead = styled.thead``;\n\nconst UsersTbody = styled.tbody``;\n\nconst UserTr = styled.tr``;\n\nconst UserTh = styled.th`\n  cursor: pointer;\n`;\n\nconst UserTd = styled.td``;\n\nconst UserItem = ({ rep }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <UserTr>\n      <UserTd>{rep.name}</UserTd>\n      <UserTd>{rep.description}</UserTd>\n      <UserTd>{rep.html_url}</UserTd>\n    </UserTr>\n  );\n};\n\nexport default function RepItems() {\n  const { reps } = useRep();\n\n  return (\n    <>\n      <UsersContainer>\n        <UsersTable className='table table-sm table-bordered table-hover'>\n          <UsersThead className='thead-dark'>\n            <UserTr>\n              <UserTh>Title</UserTh>\n              <UserTh>Description</UserTh>\n              <UserTh>Url</UserTh>\n            </UserTr>\n          </UsersThead>\n          <UsersTbody>\n            {reps.map((rep) => (\n              <UserItem key={rep.id} rep={rep} />\n            ))}\n          </UsersTbody>\n        </UsersTable>\n      </UsersContainer>\n    </>\n  );\n}\n","import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport useRep from './useRep';\r\nimport RepItems from './components/RepItem';\r\n\r\nconst AppContainer = styled.div``;\r\n\r\nfunction App() {\r\n  const { reps, handleGetRepos } = useRep();\r\n\r\n  useEffect(() => {\r\n    handleGetRepos();\r\n  }, []);\r\n\r\n  return (\r\n    <AppContainer className='container'>\r\n      <h1 className='h5 text-center'>My Own GitHub Repository</h1>\r\n      <hr />\r\n      <h2 className='h5 text-black-50'>Repository List</h2>\r\n      {reps && <RepItems />}\r\n    </AppContainer>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from '../redux/slice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}